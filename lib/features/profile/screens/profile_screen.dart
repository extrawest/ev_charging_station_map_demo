import 'package:flutter/material.dart';import 'package:extrawest_ui_kit/extrawest_ui_kit.dart';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import '../auth_bloc/auth_bloc.dart';class ProfileScreen extends StatefulWidget {  const ProfileScreen({Key? key}) : super(key: key);  @override  State<ProfileScreen> createState() => _HomeScreenState();}class _HomeScreenState extends State<ProfileScreen> {  final TextEditingController _emailController = TextEditingController();  final TextEditingController _passwordController = TextEditingController();  @override  void dispose() {    _emailController.dispose();    _passwordController.dispose();    super.dispose();  }  @override  Widget build(BuildContext context) {    final authBloc = context.watch<AuthBloc>();    return Scaffold(        appBar: AppBar(          title: const Text(''),          backgroundColor: Theme.of(context).scaffoldBackgroundColor,          shadowColor: Colors.transparent,        ),        body:        BlocListener<AuthBloc, AuthState>(          listener: (context, listenState) {            if (listenState is Error) {              ScaffoldMessenger.of(context)                ..hideCurrentSnackBar()                ..showSnackBar(                  SnackBar(                    content: Text('Error: ${listenState.error}'),                  ),                );            } else if (listenState is Authorized) {              Navigator.of(context).pop();            }          },          child: SignIn(            emailController: _emailController,            passwordController: _passwordController,            useSafeArea: true,            authType: AuthType.emailPassword,            isSignUpEnabled: false,            isResetPasswordEnabled: false,            isGuestEnabled: false,            onSignInTap: () => ScaffoldMessenger.of(context).showSnackBar(              const SnackBar(                duration: Duration(seconds: 2),                content: Text('Sign In Attempt'),              ),            ),            onSignInAsGuestTap: () => ScaffoldMessenger.of(context).showSnackBar(              const SnackBar(                duration: Duration(seconds: 2),                content: Text('Sign In as Guest Tap'),              ),            ),            onPasswordRecoveryTap: () => ScaffoldMessenger.of(context).showSnackBar(              const SnackBar(                duration: Duration(seconds: 2),                content: Text('Password recovery'),              ),            ),            socialAuthProviders: [              // SocialAuthProviderElement(              //   socialAuthProvider: SocialAuthProvider.facebook,              //   onTap: () {              //     ScaffoldMessenger.of(context).showSnackBar(              //       const SnackBar(              //         content: Text('Facebook login'),              //       ),              //     );              //   },              // ),              SocialAuthProviderElement(                socialAuthProvider: SocialAuthProvider.google,                onTap: () {                  if (context.read<AuthBloc>().state is Unautorized) {                    context.read<AuthBloc>().add(SignInEvent());                  }                  ScaffoldMessenger.of(context).showSnackBar(                    const SnackBar(                      content: Text('Google login'),                    ),                  );                },              ),              // SocialAuthProviderElement(              //   socialAuthProvider: SocialAuthProvider.x,              //   onTap: () {              //     ScaffoldMessenger.of(context).showSnackBar(              //       const SnackBar(              //         content: Text('X login'),              //       ),              //     );              //   },              // ),              // SocialAuthProviderElement(              //   socialAuthProvider: SocialAuthProvider.appleId,              //   onTap: () {              //     ScaffoldMessenger.of(context).showSnackBar(              //       const SnackBar(              //         content: Text('Apple login'),              //       ),              //     );              //   },              // ),            ],          ),        )    );  }}