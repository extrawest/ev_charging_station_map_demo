import 'package:extrawest_ui_kit/components/sign_in/auth_type.dart';import 'package:extrawest_ui_kit/components/sign_in/widgets/social_auth/social_auth_provider.dart';import 'package:extrawest_ui_kit/layouts/sign_in.dart';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import '../auth_bloc/auth_bloc.dart';class AuthWidget extends StatefulWidget {  const AuthWidget({    super.key,  });  @override  State<AuthWidget> createState() => _AuthWidgetState();}class _AuthWidgetState extends State<AuthWidget> {  final TextEditingController _emailController = TextEditingController();  final TextEditingController _passwordController = TextEditingController();  @override  void dispose() {    _emailController.dispose();    _passwordController.dispose();    super.dispose();  }  @override  Widget build(BuildContext context) {    return Container(        constraints: const BoxConstraints(            minHeight: 400,            maxHeight: 500 // Set the minimum height        ),        child: SignIn(            emailController: _emailController,            passwordController: _passwordController,            authType: AuthType.emailPassword,            onSignInTap: () => ScaffoldMessenger.of(context).showSnackBar(    const SnackBar(      duration: Duration(seconds: 2),      content: Text('Sign In Attempt'),    ),            ),            onSignInAsGuestTap: () => ScaffoldMessenger.of(context).showSnackBar(    const SnackBar(      duration: Duration(seconds: 2),      content: Text('Sign In as Guest Tap'),    ),            ),            onPasswordRecoveryTap: () => ScaffoldMessenger.of(context).showSnackBar(    const SnackBar(      duration: Duration(seconds: 2),      content: Text('Password recovery'),    ),            ),            socialAuthProviders: [    SocialAuthProviderElement(      socialAuthProvider: SocialAuthProvider.google,      onTap: () {        if (context.read<AuthBloc>().state is AuthUnautorized) {          context.read<AuthBloc>().add(AuthSignInEvent());        }        ScaffoldMessenger.of(context).showSnackBar(          const SnackBar(            content: Text('Google login'),          ),        );      },    ),            ],          ));  }}