import 'package:equatable/equatable.dart';import 'package:google_maps_flutter/google_maps_flutter.dart';import 'package:samoilenko_maps_app/features/stations/models/station.dart';class StationsState extends Equatable {  final List<Station> stationsInfo;  final LatLng? highlightedLocation;  final LatLng? myLocation;  const StationsState({    required this.stationsInfo,    this.highlightedLocation,    this.myLocation,  });  @override  List<Object> get props => [stationsInfo, highlightedLocation ?? '', myLocation ?? ''];  StationsState copyWith({    List<Station>? stationsInfo,    LatLng? myLocation,  }) {    return StationsState(      stationsInfo: stationsInfo ?? this.stationsInfo,      myLocation: myLocation ?? this.myLocation,    );  }}class StationsInitial extends StationsState {  const StationsInitial({required super.stationsInfo});}class StationsLoading extends StationsState {  const StationsLoading({required super.stationsInfo});}class StationsLoaded extends StationsState {  const StationsLoaded({required super.stationsInfo, required super.myLocation});}class StationsError extends StationsState {  final String message;  const StationsError({required this.message, required super.stationsInfo});  @override  List<Object> get props => [message];}class StationsPermissionDenied extends StationsState {  const StationsPermissionDenied({required super.stationsInfo});}class SelectedSearchStation extends StationsState {  const SelectedSearchStation({required super.stationsInfo, required super.highlightedLocation});}