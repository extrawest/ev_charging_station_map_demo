import 'dart:async';import 'package:flutter/material.dart';import 'package:google_maps_cluster_manager/google_maps_cluster_manager.dart';import 'package:google_maps_flutter/google_maps_flutter.dart';import 'package:samoilenko_maps_app/features/stations/models/map_marker/map_marker.dart';import '../../../common/services/logger.dart';import '../../../generated/assets.gen.dart';import '../models/station.dart';List<CustomMapMarker> makeListOfCustomMapMarkers(List<Station> stationsInfo) {  final List<CustomMapMarker> places = [];  for (final i in stationsInfo) {    places.add(CustomMapMarker(latLng: LatLng(i.latitude!, i.longitude!), name: i.stationId));  }  return places;}Future<Marker> Function(Cluster<CustomMapMarker>) get markerBuilder => (cluster) async {      return Marker(        markerId: MarkerId(cluster.getId()),        position: cluster.location,        onTap: () {          for (final p in cluster.items) {            log.fine(p);          }        },        icon: await _getMarkerBitmap(cluster.isMultiple ? 125 : 75, text: cluster.isMultiple ? cluster.count.toString() : null),      );    };Future<BitmapDescriptor> _getMarkerBitmap(int size, {String? text}) async {  final img = await BitmapDescriptor.fromAssetImage(const ImageConfiguration(devicePixelRatio: 3.2), Assets.images.icMapPin.path);  return img;}