import 'dart:math';import 'package:geolocator/geolocator.dart';import '../../../common/services/logger.dart';/// Determine the current position of the device.class GeolocationService {  Future<bool> hasGeoLocation() async {    final bool serviceEnabled = await Geolocator.isLocationServiceEnabled();    LocationPermission? permissionGranted;    return permissionGranted == LocationPermission.whileInUse && serviceEnabled;  }  Future<bool> checkAndRequestLocationAccess() async {    var serviceEnabled = await Geolocator.isLocationServiceEnabled();    LocationPermission? permissionGranted;    if (!serviceEnabled) {      serviceEnabled = await Geolocator.openLocationSettings();      if (!serviceEnabled) {        return false;      }    }    permissionGranted = await Geolocator.checkPermission();    if (permissionGranted == LocationPermission.denied || permissionGranted == LocationPermission.deniedForever) {      permissionGranted = await Geolocator.requestPermission();      if (permissionGranted != LocationPermission.whileInUse && permissionGranted != LocationPermission.always) {        return false;      }    }    try {      await Geolocator.getCurrentPosition();    } catch (e) {      log.fine(e.toString());      return false;    }    return true;  }  Future<Point<double>?> loadCurrentLocation() async {    try {      final locationData = await Geolocator.getCurrentPosition();      final Point<double> currentLocation = Point<double>(locationData.latitude, locationData.longitude);      return currentLocation;    } catch (e) {      log.fine(e.toString());      return null;    }  }}