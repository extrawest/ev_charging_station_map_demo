import 'dart:async';import 'package:flutter/material.dart';import 'package:google_maps_cluster_manager/google_maps_cluster_manager.dart';import 'package:google_maps_flutter/google_maps_flutter.dart';import '../models/map_marker/map_marker.dart';import '../models/station.dart';import '../utils/cluster_utils.dart';class MainMapWidget extends StatefulWidget {  final List<Station> stationsInfo;  const MainMapWidget({super.key, required this.stationsInfo});  @override  State<MainMapWidget> createState() => _MainMapWidgetState();}class _MainMapWidgetState extends State<MainMapWidget> {  final Completer<GoogleMapController> _controller = Completer<GoogleMapController>();  Set<Marker> markers = {};  late ClusterManager _manager;  @override  void initState() {    _manager = _initClusterManager();    super.initState();  }  ClusterManager _initClusterManager() {    final List<CustomMapMarker> places = makeListOfCustomMapMarkers(widget.stationsInfo);    return ClusterManager<CustomMapMarker>(places, _updateMarkers, markerBuilder: markerBuilder);  }  void _updateMarkers(Set<Marker> markers) {    setState(() {      this.markers = markers;    });  }  @override  Widget build(BuildContext context) {    //todo:move above, add mylocation    final CameraPosition kGooglePlex = CameraPosition(      target: LatLng(widget.stationsInfo[0].latitude ?? 0, widget.stationsInfo[0].longitude ?? 0),      zoom: 2,    );    return GoogleMap(      initialCameraPosition: kGooglePlex,      markers: markers,      onMapCreated: (GoogleMapController controller) {        _controller.complete(controller);        _manager.setMapId(controller.mapId);        _initClusterManager();      },      onCameraMove: _manager.onCameraMove,      onCameraIdle: _manager.updateMap,    );  }}