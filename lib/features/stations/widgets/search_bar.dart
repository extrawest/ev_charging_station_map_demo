import 'dart:async';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:google_maps_flutter/google_maps_flutter.dart';import '../../../common/widgets/inputs/input_text_widget.dart';import '../../stations_search/screens/stations_search_screen.dart';import '../../theme/theme_info.dart';import '../bloc/stations_bloc/stations_cubit.dart';class AppSearchBar extends StatefulWidget {  final Completer<GoogleMapController> mapController;  const AppSearchBar({super.key, required this.mapController});  @override  State<AppSearchBar> createState() => _AppSearchBarState();}class _AppSearchBarState extends State<AppSearchBar> {  final TextEditingController searchController = TextEditingController();  final focus = FocusNode();  @override  void initState() {    super.initState();    searchController.addListener(() {});    focus.unfocus();  }  @override  void dispose() {    searchController.dispose();    focus.dispose();    super.dispose();  }  @override  Widget build(BuildContext context) {    final stationBlocState = context.watch<StationsCubit>();    return Positioned(      top: 56,      child: Container(        height: 45,        ///full width minus padding        width: MediaQuery.of(context).size.width - 40,        decoration: BoxDecoration(          borderRadius: BorderRadius.circular(10),          color: white,        ),        child: InputTextWidget(          hintText: 'Type here',          focus: focus,          isReadonly: true,          onTapCallback: () {            Navigator.of(context).push(              PageRouteBuilder<void>(                pageBuilder: (context, animation, anotherAnimation) {                  return StationsSearchScreen(                    stations: stationBlocState.state.stationsInfo,                    mapController: widget.mapController,                  );                },                transitionDuration: const Duration(milliseconds: 400),                transitionsBuilder:                    (context, animation, anotherAnimation, child) {                  return FadeTransition(                    opacity: animation,                    child: child,                  );                },              ),            );          },          controller: searchController,        ),      ),    );  }}